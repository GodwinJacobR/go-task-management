version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: app_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=app_db
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: app_frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 